<Window x:Class="Programming4_Lab06pl_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:w="clr-namespace:Programming4_Lab06pl_WPF"
        xmlns:con="http://schemas.kent.boogaart.com/converters"
        Title="Fancy items list and all that flashy stuff"
        Height="350" Width="350">
  <Window.Resources>
    <Style x:Key="panel" TargetType="FrameworkElement">
      <Setter Property="Margin" Value="2,1,2,1" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="textBoxes" TargetType="TextBox">
      <Setter Property="Width" Value="23" />
      <Setter Property="Height" Value="22" />
    </Style>
    <Style x:Key="textBlocks" TargetType="TextBlock">
      <Setter Property="Width" Value="23" />
      <Setter Property="Height" Value="17" />
    </Style>
    <Style x:Key="rotateOnClick" BasedOn="{StaticResource panel}"
           TargetType="FrameworkElement">
      <Style.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.MouseDown">
          <EventTrigger.Actions>
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation
    Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
    From="0" To="360" Duration="0:0:1.0" RepeatBehavior="1x" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger.Actions>
        </EventTrigger>
      </Style.Triggers>
    </Style>
    <!-- <DoubleAnimationUsingKeyFrames x:Key="Elo">
      <LinearDoubleKeyFrame KeyTime="0"  Value="0" />
      <LinearDoubleKeyFrame KeyTime="2"  Value="1" />
    </DoubleAnimationUsingKeyFrames> -->
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <!-- -->
    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
      <TextBlock Text="Items distance: " Width="80" Height="17"
                  Style="{StaticResource rotateOnClick}" >
        <TextBlock.RenderTransform>
          <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type TextBlock}, AncestorLevel=1}, Path=Width,
            Converter={con:ExpressionConverter {}{0} / 2}}"
                            CenterY="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type TextBlock}, AncestorLevel=1}, Path=Height,
            Converter={con:ExpressionConverter {}{0} / 2}}"  />
        </TextBlock.RenderTransform>
      </TextBlock>
      <TextBlock Name="itemsDistanceStr" Height="17"
                  Text="{Binding ElementName=itemsDistance, Path=Value,
                  Converter={con:TypeConverter TargetType={x:Type sys:Int32}}}"
                  Width="20" Style="{StaticResource panel}" >
      </TextBlock>
      <Slider Name="itemsDistance" Grid.Column="1" Width="200" Height="22"
            Minimum="0" Maximum="20" Value="5"
            Style="{StaticResource rotateOnClick}">
        <Slider.RenderTransform>
          <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Slider}, AncestorLevel=1}, Mode=OneWay, Path=Width,
            Converter={con:ExpressionConverter {}{0} / 2}}"
                            CenterY="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Slider}, AncestorLevel=1}, Mode=OneWay, Path=Height,
            Converter={con:ExpressionConverter {}{0} / 2}}"  />
        </Slider.RenderTransform>
      </Slider>
    </StackPanel>
    <!-- -->
    <StackPanel Grid.Row="1" Orientation="Horizontal">
      <CheckBox Name="orientHoriz" Content="Horizontal orientation" Width="140" Height="17"
                Style="{StaticResource rotateOnClick}">
        <CheckBox.RenderTransform>
          <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type CheckBox}, AncestorLevel=1}, Mode=OneWay, Path=Width,
            Converter={con:ExpressionConverter {}{0} / 2}}"
                            CenterY="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type CheckBox}, AncestorLevel=1}, Mode=OneWay, Path=Height,
            Converter={con:ExpressionConverter {}{0} / 2}}"  />
        </CheckBox.RenderTransform>
      </CheckBox>
      <Button Name="buttonAdd" Content="Add item" Width="80" Height="22"
              Style="{StaticResource rotateOnClick}" Click="buttonAdd_Click">
        <Button.RenderTransform>
          <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Button}, AncestorLevel=1}, Mode=OneWay, Path=Width,
            Converter={con:ExpressionConverter {}{0} / 2}}"
                            CenterY="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Button}, AncestorLevel=1}, Mode=OneWay, Path=Height,
            Converter={con:ExpressionConverter {}{0} / 2}}"  />
        </Button.RenderTransform>
      </Button>
      <Button Name="buttonRemove" Content="Remove item" Width="80" Height="22"
              Style="{StaticResource rotateOnClick}" Click="buttonRemove_Click">
        <Button.RenderTransform>
          <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Button}, AncestorLevel=1}, Mode=OneWay, Path=Width,
            Converter={con:ExpressionConverter {}{0} / 2}}"
                            CenterY="{Binding RelativeSource={RelativeSource FindAncestor, 
            AncestorType={x:Type Button}, AncestorLevel=1}, Mode=OneWay, Path=Height,
            Converter={con:ExpressionConverter {}{0} / 2}}"  />
        </Button.RenderTransform>
      </Button>
    </StackPanel>
    <StackPanel Name="mainPanel" Grid.Row="2" Orientation="Vertical">
      <TextBlock Style="{StaticResource textBlocks}" Text="12" />
      <TextBox Style="{StaticResource textBoxes}" Text="12" />
    </StackPanel>
    <!-- <w:Reveal Grid.Row="2" Effect="" IsExpanded="True">
      <StackPanel>
        <TextBlock>12340</TextBlock>
        <TextBox>12345</TextBox>
      </StackPanel>
    </w:Reveal> -->
  </Grid>
</Window>
